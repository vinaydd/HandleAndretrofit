package com.singh.vinay.hadlercalleverysecond.server;import java.util.concurrent.TimeUnit;import okhttp3.OkHttpClient;import okhttp3.logging.HttpLoggingInterceptor;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;/** * Retrofit: Rest client */public class RestClient {    //Api service    private ApiService mApiService;    //Singleton    private static RestClient instance;    /**     * @return Singleton     */    public static RestClient getInstance() {        if (instance == null) {            instance = new RestClient();        }        return instance;    }    /**     * Private constructor     */    private RestClient() {        HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();        interceptor.setLevel(HttpLoggingInterceptor.Level.BODY);        OkHttpClient client = new OkHttpClient.Builder()                .addInterceptor(interceptor)                .connectTimeout(ApiConstant.CONNECTION_TIMEOUT, TimeUnit.SECONDS)                .readTimeout(ApiConstant.READ_TIMEOUT, TimeUnit.SECONDS)                .build();        Retrofit retrofit = new Retrofit.Builder()                .baseUrl(ApiConstant.BASE_URL)                .client(client)                .addConverterFactory(GsonConverterFactory.create())                .build();        mApiService = retrofit.create(ApiService.class);    }    /**     * @return ApiService     */    public ApiService getApiService() {        return mApiService;    }}